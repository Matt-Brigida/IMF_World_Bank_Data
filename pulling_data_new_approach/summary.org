#+title: Summary of Data Set Sources and Construction
#+options: toc:nil


* Preliminaries

Load libraries:

#+begin_src R :session :results output :exports both 
library(stargazer)
library(plm)
library(dplyr)
library(WDI)
library("IMFData", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
#+end_src


* Data Set Construction



** Macro Variables

Below is a summary of each variable and its source and description.


| Variable               | Source | Code             | Description                                                                                                                                                                  |
|------------------------+--------+------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| Inflation              | IMF    | PCPI_PC_CP_A_PT  | Prices, Consumer Price Index, All items, Percentage change, Corresponding period previous year, Percent                                                                      |
| Unemployment Rate      | IMF    | LUR_PT           | Labor Markets, Unemployment Rate, Percent                                                                                                                                    |
| Gross Domestic Product | IMF    | NGDP_R_CH_SA_XDC | National Accounts, Expenditure, Gross Domestic Product, Real, Reference Chained, Seasonally adjusted, Domestic Currency                                                      |
| Debt                   | IMF    | BCG_GALM_G01_XDC | Fiscal, Budgetary Central Government, Assets and Liabilities, Debt (at Market Value), Classification of the stocks of assets and liabilities, 2001 Manual, Domestic Currency |
|                        |        |                  |                                                                                                                                                                              |

*** IMF Data

#+begin_src R :session :results output :exports both 

### macros
databaseID <- "IFS"
startdate = "1900-01-01"
enddate = "2016-12-31"
checkquery = FALSE
country_list <- c("")  # all countries



## Pull first indicator

inflation <- "PCPI_PC_CP_A_PT"

    queryfilter <- list(CL_FREA = "", CL_AREA_IFS = country_list, CL_INDICATOR_IFS = inflation)

    inflation_data <- CompactDataMethod(databaseID, queryfilter, startdate, enddate, checkquery, tidy = TRUE)

    ## check if indicator pulled any data----
    if (is.null(inflation_data)){
        return("indicator has no data.")
    }

    ## format data for merge-----
    inflation_data  <- inflation_data[inflation_data$'@TIME_FORMAT' == "P1Y", ]

    inflation_data <- inflation_data[inflation_data$'@INDICATOR' == indicator, ]
    inflation_data <- inflation_data[, c('@TIME_PERIOD', '@OBS_VALUE', '@REF_AREA')]
    names(inflation_data) <- c("year", indicator, "iso2c")




  
  indicator <- c("LUR_PT", "PCPI_PC_CP_A_PT")
    ## pull imf indicator----

    databaseID <- "IFS"
    startdate = "1900-01-01"
    enddate = "2016-12-31"
    checkquery = FALSE
    country_list <- c("")  # all countries

    queryfilter <- list(CL_FREA = "", CL_AREA_IFS = country_list, CL_INDICATOR_IFS = indicator)

    ind_data <- CompactDataMethod(databaseID, queryfilter, startdate, enddate, checkquery, tidy = TRUE)

    ## check if indicator pulled any data----
    if (is.null(ind_data)){
        return("indicator has no data.")
    }

    ## format data for merge-----
    ind_data  <- ind_data[ind_data$'@TIME_FORMAT' == "P1Y", ]

    ind_data <- ind_data[ind_data$'@INDICATOR' == indicator, ]
    ind_data <- ind_data[, c('@TIME_PERIOD', '@OBS_VALUE', '@REF_AREA')]
    names(ind_data) <- c("year", indicator, "iso2c")

    ## merge imf indicator----

    new_data <- merge(ind_data, olddata, by = c("year", "iso2c"), all.y = TRUE)

    ## save new data set------

    saveRDS(new_data, "merged_data.rds")

    ## save old data as backup-----

    if(backup == TRUE){
        saveRDS(olddata, file = paste0("merged_data_backup_before_", indicator, ".rds"))
        }
    
}


#+end_src



*** World Bank Data

#+begin_src R :session :results output :exports both 
merge_wb <- function(indicator, backup = TRUE){

    ## read in data-----
    olddata <- readRDS("./merged_data.rds")
    
    ## check if indicator is already in data set----
    if (indicator %in% names(olddata)){
        return("indicator already in data set")
    }

    ## pull wb indicator----
    ind_data <- WDI(country = "all", indicator = indicator, start = 1900, end = 2019)

    ## check if indicator pulled any data----
    if (is.null(ind_data)){
        return("indicator has no data.")
    }

    ## merge wb indicator----

    new_data <- merge(ind_data, olddata, by = c("country", "year", "iso2c"), all.y = TRUE)

    ## save new data set------

    saveRDS(new_data, "merged_data.rds")

    ## save old data as backup-----

    if(backup == TRUE){
        saveRDS(olddata, file = paste0("merged_data_backup_before_", indicator, ".rds"))
        }

}


#+end_src


*** Merged

#+begin_src R :session :results output :exports both 


#+end_src



** Mentions and Recommendations Data

*** Mentions

#+begin_src R :session :results output :exports both 
mentions <- read.csv("./raw_exp.txt", stringsAsFactors=FALSE, header=TRUE)
mentions$Topic <- gsub(",", "", mentions$Topic)
names(mentions)[1]  <- "Country"

## calculate % mentions for each topic by country/year group------

mentions <- mentions %>%
    group_by(Country, Year) %>%
    mutate(lhs = Mentions / sum(Mentions))

## make sure each row is unique----

mentionsIndex <- paste0(mentions$Country, "_", mentions$Year)
mentionsIndex <- gsub(" ", "", mentionsIndex)

mentions <- cbind(mentionsIndex, data.frame(mentions))

### Merge with IMF/WB Data

econ_vars_for_model <- econ[, c("country", "year", vars)]

## now need to extract only unique country and year subsets-----

econVarsIndex <- paste0(econ_vars_for_model$country, "_", econ_vars_for_model$year)

econ_vars_for_model <- cbind(econVarsIndex, econ_vars_for_model)

econ_vars_for_model <- subset(econ_vars_for_model, !duplicated(econ_vars_for_model$econVarsIndex))

#### Join data-----

mergedMentions <- merge(mentions, econ_vars_for_model, by.x = "mentionsIndex", by.y = "econVarsIndex")

mergedMentions <- mergedMentions[, c("Country", "Year", "Mentions", "lhs", vars)]

### mergedMentionsED <- mergedMentionsED[complete.cases(mergedMentionsED), ]

## convert to plm
#### mergedMentionsED_p <- pdata.frame(mergedMentionsED, index = c("Country", "Year"), drop.index=FALSE, row.names=TRUE)

write.csv(mergedMentions, "merged_metions.csv")

#+end_src

*** Recommendations
